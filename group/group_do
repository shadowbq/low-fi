#!/usr/bin/env ruby
GROUP_DO_VERSION = 1.0
require 'optparse'
require 'inifile'

@sensors = []
@non_sensors = []

myini = IniFile.load("#{Dir.home}/.group.ini")

myini.each do  |s,p,v|
  if s == 'sensors' 
    @sensors << p  
  else
    @non_sensors << p
  end

end

@servers = @sensors + @non_sensors
@servers = @servers.sort.uniq

options = {
	:destination	=> "~/"
}

optparse = OptionParser.new do |opts|
  opts.banner = "GROUP_DO (Version #{GROUP_DO_VERSION} )"  
  opts.separator " Usage: #$0 [options] "
  opts.separator " Note: Commands must be escaped."
  opts.separator ""    
  opts.separator " Server List:"    

  opts.on( '-a', '--all', 'All Servers' ) do
    options[:server] = @servers
  end

  opts.on( '-s', '--sensors', 'Sensors' ) do
    options[:server] = @sensors
  end
 
 opts.separator ""
   opts.separator "  Global Options:"
  
   opts.on( '-x', '--root', 'Connect via root rather than current user' ) do
     options[:root] = true
   end

   opts.on( '-z', '--sudo', 'Connect via current user and sudo' ) do
     options[:sudo] = true
   end

   opts.on( '-v', '--verbose', 'Verbose Debugging Enabled' ) do
     options[:verbose] = true
   end
  
   opts.on_tail( '-h', '--help', 'Display this screen' ) do
     puts opts
     exit
  end
end

#Verrify the options
begin
  raise unless ARGV.size > 0
  optparse.parse!
  
#If options fail display help
rescue
  puts optparse
  exit
end

options[:server].each do |ip| 
 puts "use server #{ip}" if options[:verbose]
 if options[:root]
   puts `ssh -q root\@#{ip} -t #{ARGV[0]}`
 elsif options[:sudo]
   puts `ssh -q #{ip} -t sudo sh -c '#{ARGV[0]}'`
 else
   puts `ssh -q #{ip} -t #{ARGV[0]}`
 end

end
